# Generated from /home/fred/PycharmProjects/LuaPatcher/luaparser/parser/Lua.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,66,570,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,
        1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,
        1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
        10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,
        16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
        18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,
        21,1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,
        26,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,31,1,
        31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,
        36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,
        42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,
        48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,
        53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,3,57,347,8,57,1,
        57,1,57,1,57,5,57,352,8,57,10,57,12,57,355,9,57,1,58,4,58,358,8,
        58,11,58,12,58,359,1,58,1,58,5,58,364,8,58,10,58,12,58,367,9,58,
        3,58,369,8,58,1,58,3,58,372,8,58,1,58,1,58,4,58,376,8,58,11,58,12,
        58,377,1,58,3,58,381,8,58,3,58,383,8,58,1,58,1,58,1,58,1,58,1,58,
        3,58,390,8,58,3,58,392,8,58,1,58,3,58,395,8,58,3,58,397,8,58,1,59,
        1,59,1,59,5,59,402,8,59,10,59,12,59,405,9,59,1,59,1,59,1,59,1,59,
        5,59,411,8,59,10,59,12,59,414,9,59,1,59,1,59,3,59,418,8,59,1,60,
        1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,
        1,61,5,61,435,8,61,10,61,12,61,438,9,61,1,61,1,61,5,61,442,8,61,
        10,61,12,61,445,9,61,1,61,1,61,5,61,449,8,61,10,61,12,61,452,9,61,
        1,61,1,61,5,61,456,8,61,10,61,12,61,459,9,61,3,61,461,8,61,1,61,
        1,61,1,62,4,62,466,8,62,11,62,12,62,467,1,62,1,62,1,63,1,63,1,63,
        4,63,475,8,63,11,63,12,63,476,1,63,1,63,1,64,1,64,1,64,5,64,484,
        8,64,10,64,12,64,487,9,64,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,
        3,67,497,8,67,1,68,4,68,500,8,68,11,68,12,68,501,1,69,1,69,3,69,
        506,8,69,1,69,4,69,509,8,69,11,69,12,69,510,1,70,1,70,3,70,515,8,
        70,1,70,4,70,518,8,70,11,70,12,70,519,1,71,1,71,1,71,3,71,525,8,
        71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,3,71,536,8,71,3,
        71,538,8,71,1,71,1,71,1,71,1,71,3,71,544,8,71,1,72,3,72,547,8,72,
        1,72,1,72,3,72,551,8,72,1,73,1,73,1,73,1,73,1,73,1,73,5,73,559,8,
        73,10,73,12,73,562,9,73,1,73,3,73,565,8,73,1,74,1,74,1,74,1,74,1,
        560,0,75,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
        45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,
        55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,
        129,65,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,0,149,
        66,1,0,14,2,0,88,88,120,120,4,0,10,10,13,13,34,34,92,92,4,0,10,10,
        13,13,39,39,92,92,4,0,10,10,13,13,61,61,91,91,2,0,10,10,13,13,3,
        0,10,10,13,13,91,91,2,0,9,9,32,32,2,0,10,10,12,13,2,0,65,90,97,122,
        2,0,65,70,97,102,2,0,69,69,101,101,2,0,43,43,45,45,2,0,80,80,112,
        112,10,0,34,34,39,39,92,92,97,98,102,102,110,110,114,114,116,116,
        118,118,122,122,608,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
        0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
        0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,
        0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
        0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,
        0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,
        0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,
        1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
        0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,
        0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,149,1,0,0,0,1,151,1,0,0,0,3,
        155,1,0,0,0,5,161,1,0,0,0,7,164,1,0,0,0,9,169,1,0,0,0,11,176,1,0,
        0,0,13,180,1,0,0,0,15,186,1,0,0,0,17,190,1,0,0,0,19,199,1,0,0,0,
        21,204,1,0,0,0,23,207,1,0,0,0,25,210,1,0,0,0,27,216,1,0,0,0,29,220,
        1,0,0,0,31,224,1,0,0,0,33,227,1,0,0,0,35,234,1,0,0,0,37,241,1,0,
        0,0,39,246,1,0,0,0,41,251,1,0,0,0,43,257,1,0,0,0,45,263,1,0,0,0,
        47,265,1,0,0,0,49,267,1,0,0,0,51,269,1,0,0,0,53,271,1,0,0,0,55,274,
        1,0,0,0,57,276,1,0,0,0,59,278,1,0,0,0,61,280,1,0,0,0,63,283,1,0,
        0,0,65,286,1,0,0,0,67,289,1,0,0,0,69,292,1,0,0,0,71,294,1,0,0,0,
        73,296,1,0,0,0,75,298,1,0,0,0,77,300,1,0,0,0,79,302,1,0,0,0,81,304,
        1,0,0,0,83,307,1,0,0,0,85,310,1,0,0,0,87,312,1,0,0,0,89,314,1,0,
        0,0,91,316,1,0,0,0,93,318,1,0,0,0,95,320,1,0,0,0,97,322,1,0,0,0,
        99,325,1,0,0,0,101,327,1,0,0,0,103,329,1,0,0,0,105,333,1,0,0,0,107,
        336,1,0,0,0,109,338,1,0,0,0,111,340,1,0,0,0,113,342,1,0,0,0,115,
        346,1,0,0,0,117,396,1,0,0,0,119,417,1,0,0,0,121,419,1,0,0,0,123,
        428,1,0,0,0,125,465,1,0,0,0,127,474,1,0,0,0,129,480,1,0,0,0,131,
        490,1,0,0,0,133,492,1,0,0,0,135,496,1,0,0,0,137,499,1,0,0,0,139,
        503,1,0,0,0,141,512,1,0,0,0,143,521,1,0,0,0,145,550,1,0,0,0,147,
        564,1,0,0,0,149,566,1,0,0,0,151,152,5,97,0,0,152,153,5,110,0,0,153,
        154,5,100,0,0,154,2,1,0,0,0,155,156,5,98,0,0,156,157,5,114,0,0,157,
        158,5,101,0,0,158,159,5,97,0,0,159,160,5,107,0,0,160,4,1,0,0,0,161,
        162,5,100,0,0,162,163,5,111,0,0,163,6,1,0,0,0,164,165,5,101,0,0,
        165,166,5,108,0,0,166,167,5,115,0,0,167,168,5,101,0,0,168,8,1,0,
        0,0,169,170,5,101,0,0,170,171,5,108,0,0,171,172,5,115,0,0,172,173,
        5,101,0,0,173,174,5,105,0,0,174,175,5,102,0,0,175,10,1,0,0,0,176,
        177,5,101,0,0,177,178,5,110,0,0,178,179,5,100,0,0,179,12,1,0,0,0,
        180,181,5,102,0,0,181,182,5,97,0,0,182,183,5,108,0,0,183,184,5,115,
        0,0,184,185,5,101,0,0,185,14,1,0,0,0,186,187,5,102,0,0,187,188,5,
        111,0,0,188,189,5,114,0,0,189,16,1,0,0,0,190,191,5,102,0,0,191,192,
        5,117,0,0,192,193,5,110,0,0,193,194,5,99,0,0,194,195,5,116,0,0,195,
        196,5,105,0,0,196,197,5,111,0,0,197,198,5,110,0,0,198,18,1,0,0,0,
        199,200,5,103,0,0,200,201,5,111,0,0,201,202,5,116,0,0,202,203,5,
        111,0,0,203,20,1,0,0,0,204,205,5,105,0,0,205,206,5,102,0,0,206,22,
        1,0,0,0,207,208,5,105,0,0,208,209,5,110,0,0,209,24,1,0,0,0,210,211,
        5,108,0,0,211,212,5,111,0,0,212,213,5,99,0,0,213,214,5,97,0,0,214,
        215,5,108,0,0,215,26,1,0,0,0,216,217,5,110,0,0,217,218,5,105,0,0,
        218,219,5,108,0,0,219,28,1,0,0,0,220,221,5,110,0,0,221,222,5,111,
        0,0,222,223,5,116,0,0,223,30,1,0,0,0,224,225,5,111,0,0,225,226,5,
        114,0,0,226,32,1,0,0,0,227,228,5,114,0,0,228,229,5,101,0,0,229,230,
        5,112,0,0,230,231,5,101,0,0,231,232,5,97,0,0,232,233,5,116,0,0,233,
        34,1,0,0,0,234,235,5,114,0,0,235,236,5,101,0,0,236,237,5,116,0,0,
        237,238,5,117,0,0,238,239,5,114,0,0,239,240,5,110,0,0,240,36,1,0,
        0,0,241,242,5,116,0,0,242,243,5,104,0,0,243,244,5,101,0,0,244,245,
        5,110,0,0,245,38,1,0,0,0,246,247,5,116,0,0,247,248,5,114,0,0,248,
        249,5,117,0,0,249,250,5,101,0,0,250,40,1,0,0,0,251,252,5,117,0,0,
        252,253,5,110,0,0,253,254,5,116,0,0,254,255,5,105,0,0,255,256,5,
        108,0,0,256,42,1,0,0,0,257,258,5,119,0,0,258,259,5,104,0,0,259,260,
        5,105,0,0,260,261,5,108,0,0,261,262,5,101,0,0,262,44,1,0,0,0,263,
        264,5,43,0,0,264,46,1,0,0,0,265,266,5,45,0,0,266,48,1,0,0,0,267,
        268,5,42,0,0,268,50,1,0,0,0,269,270,5,47,0,0,270,52,1,0,0,0,271,
        272,5,47,0,0,272,273,5,47,0,0,273,54,1,0,0,0,274,275,5,37,0,0,275,
        56,1,0,0,0,276,277,5,94,0,0,277,58,1,0,0,0,278,279,5,35,0,0,279,
        60,1,0,0,0,280,281,5,61,0,0,281,282,5,61,0,0,282,62,1,0,0,0,283,
        284,5,126,0,0,284,285,5,61,0,0,285,64,1,0,0,0,286,287,5,60,0,0,287,
        288,5,61,0,0,288,66,1,0,0,0,289,290,5,62,0,0,290,291,5,61,0,0,291,
        68,1,0,0,0,292,293,5,60,0,0,293,70,1,0,0,0,294,295,5,62,0,0,295,
        72,1,0,0,0,296,297,5,61,0,0,297,74,1,0,0,0,298,299,5,38,0,0,299,
        76,1,0,0,0,300,301,5,124,0,0,301,78,1,0,0,0,302,303,5,126,0,0,303,
        80,1,0,0,0,304,305,5,62,0,0,305,306,5,62,0,0,306,82,1,0,0,0,307,
        308,5,60,0,0,308,309,5,60,0,0,309,84,1,0,0,0,310,311,5,40,0,0,311,
        86,1,0,0,0,312,313,5,41,0,0,313,88,1,0,0,0,314,315,5,123,0,0,315,
        90,1,0,0,0,316,317,5,125,0,0,317,92,1,0,0,0,318,319,5,91,0,0,319,
        94,1,0,0,0,320,321,5,93,0,0,321,96,1,0,0,0,322,323,5,58,0,0,323,
        324,5,58,0,0,324,98,1,0,0,0,325,326,5,58,0,0,326,100,1,0,0,0,327,
        328,5,44,0,0,328,102,1,0,0,0,329,330,5,46,0,0,330,331,5,46,0,0,331,
        332,5,46,0,0,332,104,1,0,0,0,333,334,5,46,0,0,334,335,5,46,0,0,335,
        106,1,0,0,0,336,337,5,46,0,0,337,108,1,0,0,0,338,339,5,59,0,0,339,
        110,1,0,0,0,340,341,5,33,0,0,341,112,1,0,0,0,342,343,5,63,0,0,343,
        114,1,0,0,0,344,347,3,131,65,0,345,347,5,95,0,0,346,344,1,0,0,0,
        346,345,1,0,0,0,347,353,1,0,0,0,348,352,3,131,65,0,349,352,5,95,
        0,0,350,352,3,133,66,0,351,348,1,0,0,0,351,349,1,0,0,0,351,350,1,
        0,0,0,352,355,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,354,116,1,
        0,0,0,355,353,1,0,0,0,356,358,3,133,66,0,357,356,1,0,0,0,358,359,
        1,0,0,0,359,357,1,0,0,0,359,360,1,0,0,0,360,368,1,0,0,0,361,365,
        5,46,0,0,362,364,3,133,66,0,363,362,1,0,0,0,364,367,1,0,0,0,365,
        363,1,0,0,0,365,366,1,0,0,0,366,369,1,0,0,0,367,365,1,0,0,0,368,
        361,1,0,0,0,368,369,1,0,0,0,369,371,1,0,0,0,370,372,3,139,69,0,371,
        370,1,0,0,0,371,372,1,0,0,0,372,383,1,0,0,0,373,375,5,46,0,0,374,
        376,3,133,66,0,375,374,1,0,0,0,376,377,1,0,0,0,377,375,1,0,0,0,377,
        378,1,0,0,0,378,380,1,0,0,0,379,381,3,139,69,0,380,379,1,0,0,0,380,
        381,1,0,0,0,381,383,1,0,0,0,382,357,1,0,0,0,382,373,1,0,0,0,383,
        397,1,0,0,0,384,385,5,48,0,0,385,386,7,0,0,0,386,391,3,137,68,0,
        387,389,5,46,0,0,388,390,3,137,68,0,389,388,1,0,0,0,389,390,1,0,
        0,0,390,392,1,0,0,0,391,387,1,0,0,0,391,392,1,0,0,0,392,394,1,0,
        0,0,393,395,3,141,70,0,394,393,1,0,0,0,394,395,1,0,0,0,395,397,1,
        0,0,0,396,382,1,0,0,0,396,384,1,0,0,0,397,118,1,0,0,0,398,403,5,
        34,0,0,399,402,3,143,71,0,400,402,8,1,0,0,401,399,1,0,0,0,401,400,
        1,0,0,0,402,405,1,0,0,0,403,401,1,0,0,0,403,404,1,0,0,0,404,406,
        1,0,0,0,405,403,1,0,0,0,406,418,5,34,0,0,407,412,5,39,0,0,408,411,
        3,143,71,0,409,411,8,2,0,0,410,408,1,0,0,0,410,409,1,0,0,0,411,414,
        1,0,0,0,412,410,1,0,0,0,412,413,1,0,0,0,413,415,1,0,0,0,414,412,
        1,0,0,0,415,418,5,39,0,0,416,418,3,149,74,0,417,398,1,0,0,0,417,
        407,1,0,0,0,417,416,1,0,0,0,418,120,1,0,0,0,419,420,5,45,0,0,420,
        421,5,45,0,0,421,422,5,91,0,0,422,423,1,0,0,0,423,424,3,147,73,0,
        424,425,5,93,0,0,425,426,1,0,0,0,426,427,6,60,0,0,427,122,1,0,0,
        0,428,429,5,45,0,0,429,430,5,45,0,0,430,460,1,0,0,0,431,461,1,0,
        0,0,432,436,5,91,0,0,433,435,5,61,0,0,434,433,1,0,0,0,435,438,1,
        0,0,0,436,434,1,0,0,0,436,437,1,0,0,0,437,461,1,0,0,0,438,436,1,
        0,0,0,439,443,5,91,0,0,440,442,5,61,0,0,441,440,1,0,0,0,442,445,
        1,0,0,0,443,441,1,0,0,0,443,444,1,0,0,0,444,446,1,0,0,0,445,443,
        1,0,0,0,446,450,8,3,0,0,447,449,8,4,0,0,448,447,1,0,0,0,449,452,
        1,0,0,0,450,448,1,0,0,0,450,451,1,0,0,0,451,461,1,0,0,0,452,450,
        1,0,0,0,453,457,8,5,0,0,454,456,8,4,0,0,455,454,1,0,0,0,456,459,
        1,0,0,0,457,455,1,0,0,0,457,458,1,0,0,0,458,461,1,0,0,0,459,457,
        1,0,0,0,460,431,1,0,0,0,460,432,1,0,0,0,460,439,1,0,0,0,460,453,
        1,0,0,0,461,462,1,0,0,0,462,463,6,61,0,0,463,124,1,0,0,0,464,466,
        7,6,0,0,465,464,1,0,0,0,466,467,1,0,0,0,467,465,1,0,0,0,467,468,
        1,0,0,0,468,469,1,0,0,0,469,470,6,62,0,0,470,126,1,0,0,0,471,472,
        5,13,0,0,472,475,5,10,0,0,473,475,7,7,0,0,474,471,1,0,0,0,474,473,
        1,0,0,0,475,476,1,0,0,0,476,474,1,0,0,0,476,477,1,0,0,0,477,478,
        1,0,0,0,478,479,6,63,0,0,479,128,1,0,0,0,480,481,5,35,0,0,481,485,
        5,33,0,0,482,484,8,4,0,0,483,482,1,0,0,0,484,487,1,0,0,0,485,483,
        1,0,0,0,485,486,1,0,0,0,486,488,1,0,0,0,487,485,1,0,0,0,488,489,
        6,64,0,0,489,130,1,0,0,0,490,491,7,8,0,0,491,132,1,0,0,0,492,493,
        2,48,57,0,493,134,1,0,0,0,494,497,3,133,66,0,495,497,7,9,0,0,496,
        494,1,0,0,0,496,495,1,0,0,0,497,136,1,0,0,0,498,500,3,135,67,0,499,
        498,1,0,0,0,500,501,1,0,0,0,501,499,1,0,0,0,501,502,1,0,0,0,502,
        138,1,0,0,0,503,505,7,10,0,0,504,506,7,11,0,0,505,504,1,0,0,0,505,
        506,1,0,0,0,506,508,1,0,0,0,507,509,3,133,66,0,508,507,1,0,0,0,509,
        510,1,0,0,0,510,508,1,0,0,0,510,511,1,0,0,0,511,140,1,0,0,0,512,
        514,7,12,0,0,513,515,7,11,0,0,514,513,1,0,0,0,514,515,1,0,0,0,515,
        517,1,0,0,0,516,518,3,133,66,0,517,516,1,0,0,0,518,519,1,0,0,0,519,
        517,1,0,0,0,519,520,1,0,0,0,520,142,1,0,0,0,521,543,5,92,0,0,522,
        525,7,13,0,0,523,525,3,145,72,0,524,522,1,0,0,0,524,523,1,0,0,0,
        525,544,1,0,0,0,526,527,5,117,0,0,527,528,5,123,0,0,528,529,1,0,
        0,0,529,530,3,137,68,0,530,531,5,125,0,0,531,544,1,0,0,0,532,537,
        3,133,66,0,533,535,3,133,66,0,534,536,3,133,66,0,535,534,1,0,0,0,
        535,536,1,0,0,0,536,538,1,0,0,0,537,533,1,0,0,0,537,538,1,0,0,0,
        538,544,1,0,0,0,539,540,5,120,0,0,540,541,3,135,67,0,541,542,3,135,
        67,0,542,544,1,0,0,0,543,524,1,0,0,0,543,526,1,0,0,0,543,532,1,0,
        0,0,543,539,1,0,0,0,544,144,1,0,0,0,545,547,5,13,0,0,546,545,1,0,
        0,0,546,547,1,0,0,0,547,548,1,0,0,0,548,551,5,10,0,0,549,551,5,13,
        0,0,550,546,1,0,0,0,550,549,1,0,0,0,551,146,1,0,0,0,552,553,5,61,
        0,0,553,554,3,147,73,0,554,555,5,61,0,0,555,565,1,0,0,0,556,560,
        5,91,0,0,557,559,9,0,0,0,558,557,1,0,0,0,559,562,1,0,0,0,560,561,
        1,0,0,0,560,558,1,0,0,0,561,563,1,0,0,0,562,560,1,0,0,0,563,565,
        5,93,0,0,564,552,1,0,0,0,564,556,1,0,0,0,565,148,1,0,0,0,566,567,
        5,91,0,0,567,568,3,147,73,0,568,569,5,93,0,0,569,150,1,0,0,0,43,
        0,346,351,353,359,365,368,371,377,380,382,389,391,394,396,401,403,
        410,412,417,436,443,450,457,460,467,474,476,485,496,501,505,510,
        514,519,524,535,537,543,546,550,560,564,1,0,1,0
    ]

class LuaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    AND = 1
    BREAK = 2
    DO = 3
    ELSE = 4
    ELSEIF = 5
    END = 6
    FALSE = 7
    FOR = 8
    FUNCTION = 9
    GOTO = 10
    IF = 11
    IN = 12
    LOCAL = 13
    NIL = 14
    NOT = 15
    OR = 16
    REPEAT = 17
    RETURN = 18
    THEN = 19
    TRUE = 20
    UNTIL = 21
    WHILE = 22
    ADD = 23
    MINUS = 24
    MULT = 25
    DIV = 26
    FLOOR = 27
    MOD = 28
    POW = 29
    LENGTH = 30
    EQ = 31
    NEQ = 32
    LTEQ = 33
    GTEQ = 34
    LT = 35
    GT = 36
    ASSIGN = 37
    BITAND = 38
    BITOR = 39
    BITNOT = 40
    BITRSHIFT = 41
    BITRLEFT = 42
    OPAR = 43
    CPAR = 44
    OBRACE = 45
    CBRACE = 46
    OBRACK = 47
    CBRACK = 48
    COLCOL = 49
    COL = 50
    COMMA = 51
    VARARGS = 52
    CONCAT = 53
    DOT = 54
    SEMCOL = 55
    REQFIELD = 56
    OPTIONALFIELD = 57
    NAME = 58
    NUMBER = 59
    STRING = 60
    COMMENT = 61
    LINE_COMMENT = 62
    SPACE = 63
    NEWLINE = 64
    SHEBANG = 65
    LongBracket = 66

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'and'", "'break'", "'do'", "'else'", "'elseif'", "'end'", "'false'", 
            "'for'", "'function'", "'goto'", "'if'", "'in'", "'local'", 
            "'nil'", "'not'", "'or'", "'repeat'", "'return'", "'then'", 
            "'true'", "'until'", "'while'", "'+'", "'-'", "'*'", "'/'", 
            "'//'", "'%'", "'^'", "'#'", "'=='", "'~='", "'<='", "'>='", 
            "'<'", "'>'", "'='", "'&'", "'|'", "'~'", "'>>'", "'<<'", "'('", 
            "')'", "'{'", "'}'", "'['", "']'", "'::'", "':'", "','", "'...'", 
            "'..'", "'.'", "';'", "'!'", "'?'" ]

    symbolicNames = [ "<INVALID>",
            "AND", "BREAK", "DO", "ELSE", "ELSEIF", "END", "FALSE", "FOR", 
            "FUNCTION", "GOTO", "IF", "IN", "LOCAL", "NIL", "NOT", "OR", 
            "REPEAT", "RETURN", "THEN", "TRUE", "UNTIL", "WHILE", "ADD", 
            "MINUS", "MULT", "DIV", "FLOOR", "MOD", "POW", "LENGTH", "EQ", 
            "NEQ", "LTEQ", "GTEQ", "LT", "GT", "ASSIGN", "BITAND", "BITOR", 
            "BITNOT", "BITRSHIFT", "BITRLEFT", "OPAR", "CPAR", "OBRACE", 
            "CBRACE", "OBRACK", "CBRACK", "COLCOL", "COL", "COMMA", "VARARGS", 
            "CONCAT", "DOT", "SEMCOL", "REQFIELD", "OPTIONALFIELD", "NAME", 
            "NUMBER", "STRING", "COMMENT", "LINE_COMMENT", "SPACE", "NEWLINE", 
            "SHEBANG", "LongBracket" ]

    ruleNames = [ "AND", "BREAK", "DO", "ELSE", "ELSEIF", "END", "FALSE", 
                  "FOR", "FUNCTION", "GOTO", "IF", "IN", "LOCAL", "NIL", 
                  "NOT", "OR", "REPEAT", "RETURN", "THEN", "TRUE", "UNTIL", 
                  "WHILE", "ADD", "MINUS", "MULT", "DIV", "FLOOR", "MOD", 
                  "POW", "LENGTH", "EQ", "NEQ", "LTEQ", "GTEQ", "LT", "GT", 
                  "ASSIGN", "BITAND", "BITOR", "BITNOT", "BITRSHIFT", "BITRLEFT", 
                  "OPAR", "CPAR", "OBRACE", "CBRACE", "OBRACK", "CBRACK", 
                  "COLCOL", "COL", "COMMA", "VARARGS", "CONCAT", "DOT", 
                  "SEMCOL", "REQFIELD", "OPTIONALFIELD", "NAME", "NUMBER", 
                  "STRING", "COMMENT", "LINE_COMMENT", "SPACE", "NEWLINE", 
                  "SHEBANG", "Letter", "Digit", "HexDigit", "HexDigits", 
                  "Exponent", "BinaryExponent", "EscapeSequence", "LineBreak", 
                  "NESTED_STR", "LongBracket" ]

    grammarFileName = "Lua.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


